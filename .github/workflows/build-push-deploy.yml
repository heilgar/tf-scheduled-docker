name: Build, Push, and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - push
        - apply

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  S3_BUCKET: ${{ secrets.S3_BUCKET }}
  DYNAMODB_TABLE: ${{ secrets.DYNAMODB_TABLE }}
  ECR_REPOSITORY_NAME: ${{ secrets.ECR_REPOSITORY_NAME }}
  ECS_CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME }}
  CRON_EXPRESSION: ${{ secrets.CRON_EXPRESSION }}
  CONTAINER_STOP_TIMEOUT: ${{ secrets.CONTAINER_STOP_TIMEOUT }}
  CONTAINER_ENVIRONMENT: ${{ secrets.CONTAINER_ENVIRONMENT }}
  ROLE_NAME: ${{ secrets.ROLE_NAME }}
  OIDC_PROVIDER_URL: ${{ secrets.OIDC_PROVIDER_URL }}
  OIDC_PROVIDER_NAME: ${{ secrets.OIDC_PROVIDER_NAME }}
  POLICY_NAME: ${{ secrets.POLICY_NAME }}

permissions:
  id-token: write
  contents: read

jobs:
  push-docker:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}
        audience: sts.amazonaws.com

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push Docker image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        make push

  terraform:
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.action != 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: make init

    - name: Terraform Plan
      if: github.event_name != 'workflow_dispatch' || github.event.inputs.action == 'plan'
      run: make plan

    - name: Terraform Apply
      if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply')
      run: make apply